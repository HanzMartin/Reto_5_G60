/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

/**
 *
 * @author Usuario
 */

import controller.ControladorRequerimientosReto4;
import model.vo.LideresMayorSalario;
import model.vo.LideresProyectosEmblematicos;
import model.vo.MaterialRankeadoImportado;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.*;

public class VistaRequerimientosReto4 extends JPanel {

    /**
     * Creates new form VistaRequerimientosReto4
     */
    public static final ControladorRequerimientosReto4 controlador = new ControladorRequerimientosReto4();
    private static String columnNames[];
    private static String data[][];
    
    public VistaRequerimientosReto4() {
        //setLayout(new BorderLayout());
        requerimiento1();
        jTable1 = new JTable(data, columnNames);
        jScrollPane1 = new JScrollPane(jTable1);
        add(jScrollPane1);

        requerimiento3();
        jTable3 = new JTable(data, columnNames);
        jScrollPane2 = new JScrollPane(jTable3);
        add(jScrollPane2, BorderLayout.CENTER);

        requerimiento4();
        jTable2 = new JTable(data, columnNames);
        jScrollPane2 = new JScrollPane(jTable2);
        add(jScrollPane2);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, null));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jScrollPane1.setAlignmentX(1.0F);
        jScrollPane1.setAlignmentY(1.0F);
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jTable1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 532, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.getAccessibleContext().setAccessibleName("");
        jScrollPane1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
public static void main(String args[]) {
        JFrame ventana = new JFrame("Tutorial de Java, Swing Reto 5");
        ventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ventana.getContentPane().add(new VistaRequerimientosReto4(), BorderLayout.CENTER);
        ventana.setSize(1450, 800);
        ventana.setLocationRelativeTo(null);
        ventana.setVisible(true);
    }

public static void requerimiento1(){

         //System.out.println("*** Lideres con mayor salario ***");       

        columnNames = new String[3];
        columnNames[0] = "ID_Lider";
        columnNames[1] = "Nombre";
        columnNames[2] = "Primer_Apellido";

        try{
           
            ArrayList<LideresMayorSalario> rankingLideresMayorSalario = controlador.consultarLideresMayorSalarios();

            
            data = new String[rankingLideresMayorSalario.size()][columnNames.length];
            
            //Encabezado del resultado
           //System.out.println("ID_Lider  Nombre  Primer_Apellido");
          
            //Cada VO cargado, mostrarlo en la vista
            for (int x = 0; x < data.length; x++) {
               data[x][0] = rankingLideresMayorSalario.get(x).getIdLider() + "";
               data[x][1] = rankingLideresMayorSalario.get(x).getNombre() + "";
               data[x][2] = rankingLideresMayorSalario.get(x).getPrimerApellido() + "";
            }

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }

    }

    public static void requerimiento3(){

        //System.out.println("*** Lideres proyectos emblemÃ¡ticos ***");   
        
        columnNames = new String[3];
        columnNames[0] = "ID_Lider";
        columnNames[1] = "Id_Proyecto";
        columnNames[2] = "Id_Tipo";

        try{
           
            ArrayList<LideresProyectosEmblematicos> rankingProyectosEmblematicos = controlador.consultarLideresProyectosEmblematicos();

            
            data = new String[rankingProyectosEmblematicos.size()][columnNames.length];
            
            //Encabezado del resultado
          
          
            //Cada VO cargado, mostrarlo en la vista
            for (int x = 0; x < data.length; x++) {
               data[x][0] = rankingProyectosEmblematicos.get(x).getIdLider() + "";
               data[x][1] = rankingProyectosEmblematicos.get(x).getIdProyecto() + "";
               data[x][2] = rankingProyectosEmblematicos.get(x).getIdTipo() + "";
            }

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }

       /* try{

            ArrayList<LideresProyectosEmblematicos> rankingProyectosEmblematicos = controlador.consultarLideresProyectosEmblematicos();

            //Encabezado del resultado
            //System.out.println("Id_Lider Id_Proyecto Id_Tipo");
            
            //Cada VO cargado, mostrarlo en la vista
            for (LideresProyectosEmblematicos lideresProyectosE : rankingProyectosEmblematicos) {
                System.out.printf("      %d         %d       %d %n",
                    lideresProyectosE.getIdLider(),
                    lideresProyectosE.getIdProyecto(),
                    lideresProyectosE.getIdTipo()
                );   
            }

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }*/

    }

    public static void requerimiento4(){

        //System.out.println("*** Productos importados ***");    
        
        columnNames = new String[1];
        columnNames[0] = "Material";
       

        try{
            
            ArrayList<MaterialRankeadoImportado> rankingMaterialesImportados = controlador.consultarMaterialesRankeadosImportados();

            //Cada VO cargado, mostrarlo en la vista

            data = new String[rankingMaterialesImportados.size()][columnNames.length];
            
            //Encabezado del resultado
          
          
            //Cada VO cargado, mostrarlo en la vista
            for (int x = 0; x < data.length; x++) {
               data[x][0] = "El producto de ID " + rankingMaterialesImportados.get(x).getIdMaterial() + " de descripciÃ³n: " + rankingMaterialesImportados.get(x).getNombreMaterial() + " de tipo importado(a), tiene un precio de " + rankingMaterialesImportados.get(x).getPrecioUnidad();
                }

            /*for (MaterialRankeadoImportado materialImportado : rankingMaterialesImportados) {
                System.out.printf("El producto de ID %d de descripciÃ³n: %s de tipo importado(a), tiene un precio de %d %n",
                    materialImportado.getIdMaterial(),
                    materialImportado.getNombreMaterial(),
                    materialImportado.getPrecioUnidad()
                );   
            }*/

        }catch(SQLException e){
            System.err.println("Ha ocurrido un error!"+e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
